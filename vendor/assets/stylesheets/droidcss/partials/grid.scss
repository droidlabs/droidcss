@function contentWidth($num) {
  @if (unit($gutterWidth) == "%") {
    @return 100% * ($num/$columnsCount) - 2 * $gutterWidth;
  } @else {
    @return 100% * ($num/$columnsCount);
  }
}

@function contentWidthOffset($num) {
  @if (unit($gutterWidth) == "%") {
    @return 100% * ($num/$columnsCount) + 1 * $gutterWidth;
  } @else {
    @return 100% * ($num/$columnsCount);
  }
}

.grid-container {
  max-width: $gridWidth;
  margin-left: auto;
  margin-right: auto;
  clear: both;
  &:before, &:after {
    content: ".";
    display: block;
    overflow: hidden;
    visibility: hidden;
    font-size: 0;
    line-height: 0;
    width: 0;
    height: 0;
    clear: both;
  }
}

.row {
  margin-right: -$gutterWidth;
  margin-left: -$gutterWidth;
  @include clearfix;
}

%grid-settings {
  #{$gutterType}-left: $gutterWidth;
  #{$gutterType}-right: $gutterWidth;
  float: left;
  min-height: 1px;
  @include box-sizing(border-box);
}

%position-relative {
  position: relative;
}

@for $i from 1 through $columnsCount {
  $num: $i;
  .grid-#{$num} {
    @extend %grid-settings;
  }
  .push-#{$num}, .pull-#{$num} {
    @extend %position-relative;
  }
}

@for $i from 1 through $columnsCount {
  $num: $i;
  $contentWidth: contentWidth($num);
  $contentWidthOffset: contentWidthOffset($num);
  .grid-#{$num} { width: $contentWidth; }
  .prefix-#{$num} { #{$gutterType}-left: $contentWidthOffset; }
  .suffix-#{$num} { #{$gutterType}-right: $contentWidthOffset; }
  .push-#{$num} { left: $contentWidthOffset; }
  .pull-#{$num} { left: -$contentWidthOffset; }
}

/* DESKTOP SUPPORT */

@media screen and (min-width: $mediaDesktopMin) {
  .visible-desktop {
    opacity: 1 !important;
  }
  .hide-on-desktop, .only-tablet, .only-mobile {
    display: none !important;
  }
}

/* TABLET SUPPORT */

@media screen and (min-width: $mediaTabletMin) and (max-width: $mediaTabletMax) {

  .grid-container {
    max-width: 100%;
    #{$gutterTypeTablet}-left: $gutterWidth;
    #{$gutterTypeTablet}-right: $gutterWidth;
  }
  .visible-tablet {
    opacity: 1 !important;
  }
  .hide-on-tablet, .only-desktop, .only-mobile {
    display: none !important;
  }
  .prefix-tablet-0 { #{$gutterTypeTabletOffset}-left: $gutterWidth; }
  .suffix-tablet-0 { #{$gutterTypeTabletOffset}-right: $gutterWidth; }

  @for $i from 1 through $columnsCount {
    $num: $i;
    $contentWidth: contentWidth($num);
    $contentWidthOffset: contentWidthOffset($num);
    .grid-tablet-#{$num} { width: $contentWidth; }
    .prefix-tablet-#{$num} { #{$gutterTypeTabletOffset}-left: $contentWidthOffset; }
    .suffix-tablet-#{$num} { #{$gutterTypeTabletOffset}-right: $contentWidthOffset; }
    .push-tablet-#{$num} { left: $contentWidthOffset; }
    .pull-tablet-#{$num} { left: -$contentWidthOffset; }
  }
}

/* MOBILE SUPPORT */

@media screen and (max-width: $mediaMobileMax) {
  .grid-container {
    max-width: 100%;
    #{$gutterTypeMobile}-left: $gutterWidth;
    #{$gutterTypeMobile}-right: $gutterWidth;
  }
  .visible-mobile {
    opacity: 1 !important;
  }
  .hide-on-mobile, .only-desktop, .only-tablet {
    display: none !important;
  }
  .prefix-mobile-0 { #{$gutterTypeMobileOffset}-left: $gutterWidth; }
  .suffix-mobile-0 { #{$gutterTypeMobileOffset}-right: $gutterWidth; }

  @for $i from 1 through $columnsCount {
    $num: $i;
    $contentWidth: contentWidth($num);
    $contentWidthOffset: contentWidthOffset($num);
    .grid-mobile-#{$num} { width: $contentWidth; }
    .prefix-mobile-#{$num} { #{$gutterTypeMobileOffset}-left: $contentWidthOffset; }
    .suffix-mobile-#{$num} { #{$gutterTypeMobileOffset}-right: $contentWidthOffset; }
    .push-mobile-#{$num} { left: $contentWidthOffset; }
    .pull-mobile-#{$num} { left: -$contentWidthOffset; }
  }
}